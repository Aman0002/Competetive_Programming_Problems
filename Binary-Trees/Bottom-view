/*****
**********GEEKS-FOR-GEEKS****
https://practice.geeksforgeeks.org/problems/bottom-view-of-binary-tree/1

******/

vector <int> bottomView(Node *root)
{
   // Your Code Here
   vector<int> ans;
    
    if (root==NULL)
    return ans;
    
    queue< pair< Node *,int >> q;
    q.push(make_pair(root,0));
    map<int,int> m;
    while (q.size()!=0)
    {
        Node * temp = q.front().first;
        int h = q.front().second;
        q.pop();
        
        m[h] = temp->data;
        
        if (temp->left)
        {
            q.push(make_pair(temp->left,h-1));
        }
        if (temp->right)
        {
            q.push(make_pair(temp->right,h+1));
        }
    }
    for (auto x :m)
    {
        ans.push_back(x.second);
    }
    
    return ans;
}
